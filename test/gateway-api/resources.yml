---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: gateway-one
  namespace: default
spec:
  gatewayClassName: "istio"
  listeners:
  - name: default
    hostname: "*.gw.foo.org"
    port: 80
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: All
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: gateway-two
  namespace: default
spec:
  gatewayClassName: "istio"
  listeners:
  - name: default
    hostname: "*.gw.foo.org"
    port: 80
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: All
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: myservicea
  namespace: default
spec:
  parentRefs:
  - name: gateway-one
  hostnames: ["myservicea.gw.foo.org"]
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: backend
      port: 80

---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: myserviceb
  namespace: kube-system
spec:
  parentRefs:
  - name: gateway-one
    namespace: default
  hostnames: ["myserviceb.gw.foo.org"]
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: backend
      port: 80

---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: myservicec
  namespace: kube-system
spec:
  parentRefs:
  - name: gatewayWrong
    namespace: default
  hostnames: ["myservicec.gw.foo.org"]
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: backend
      port: 80
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: myserviced
  namespace: default
spec:
  parentRefs:
  - name: gateway-one
  - name: gateway-two
  hostnames: ["myserviced.gw.foo.org"]
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: backend
      port: 80
